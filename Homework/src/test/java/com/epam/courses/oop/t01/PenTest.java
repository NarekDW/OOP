package com.epam.courses.oop.t01;

import org.junit.Test;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.*;

/**
 * Created by Narek on 16.01.2017.
 */
public class PenTest {
    Pen pen = new Pen(10,5,"green");
    Pen exp = new Pen(-1, -9, "red");

    @Test
    public void getLengthAndWidthAndColorTest(){
        assertEquals(10, pen.getLength() , 0.001);
        assertEquals(5, pen.getWidth(), 0.001);
        assertThat(pen.getColor(), is("green"));

        assertEquals(0, exp.getLength() , 0.001);
        assertEquals(0, exp.getWidth(), 0.001);
        assertThat(exp.getColor(), is("red"));
    }

    @Test
    public void setLengthAndWidthAndColorTest(){
        assertEquals(15, pen.setLength(15), 0.001);
        assertEquals(0, pen.setLength(-10), 0.001);
        assertEquals(7, pen.setWidth(7), 0.001);
        assertEquals(0, pen.setWidth(-10), 0.001);
        assertThat(pen.setColor("red"), is("red"));
    }

    @Test
    public void equalsAndHasCodeTest(){
        Pen pen1 = new Pen(1,2,"r");
        Pen pen2 = new Pen(1,2,"r");
        Pen pen3 = new Pen(5,2,"b");

        assertTrue(pen1.equals(pen2));
        assertTrue(pen2.equals(pen1));
        assertEquals(pen1.hashCode(), pen2.hashCode());

        assertFalse(pen3.equals(pen1));
        assertFalse(pen3.equals(pen2));
        assertNotEquals(pen3.hashCode(), pen1.hashCode());
        assertNotEquals(pen3.hashCode(), pen2.hashCode());
    }

    @Test
    public void toStringTest(){
        String expected1 = pen.getClass().getName()+"@\n"+
                "Length = "+10.0 +"\n" +
                "Width = "+5.0+"\n" +
                "Color = "+"green\n";

        String expected2 = exp.getClass().getName()+"@\n"+
                "Length = "+0.0 +"\n" +
                "Width = "+0.0+"\n" +
                "Color = "+"red\n";

        assertEquals(expected1, pen.toString());
        assertEquals(expected2, exp.toString());

    }

}
